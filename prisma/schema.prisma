generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Review {
  movieId   Int
  userId    String   @db.VarChar(28)
  details   String   @db.VarChar(5000)
  rating    Int
  createdAt DateTime @default(now())

  @@id([movieId, userId])
}

model Schedule {
  userId          String           @db.VarChar(28)
  isoDate         String           @db.VarChar(255)
  isPending       Boolean          @default(true)
  movieId         Int
  notificationId  String
  scheduleInvites ScheduleInvite[]

  @@id([userId, isoDate])
}

model ScheduleInvite {
  userId   String   @db.VarChar(28)
  isoDate  String   @db.VarChar(255)
  friendId String   @db.VarChar(28)
  schedule Schedule @relation(fields: [userId, isoDate], references: [userId, isoDate], onDelete: Cascade)

  @@id([userId, isoDate, friendId])
}

model Friend {
  userId   String @db.VarChar(28)
  friendId String @db.VarChar(28)

  @@id([userId, friendId])
}

model BlockedUser {
  userId        String @db.VarChar(28)
  blockedUserId String @db.VarChar(28)

  @@id([userId, blockedUserId])
}

enum WatchStatus {
  WatchList
  Watched
}

model UserMovie {
  userId      String      @db.VarChar(28)
  movieId     Int
  watchStatus WatchStatus

  @@id([userId, movieId])
}
